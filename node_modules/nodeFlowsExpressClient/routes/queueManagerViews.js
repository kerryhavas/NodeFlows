module.exports = function (app) {

    var nodeFlows = require('nodeFlows');

    app.get('/queue/active', function (req, res) {
        nodeFlows.queueManager.getQueue(function (queueItems) {
            res.render('../node_modules/nodeFlowsExpressClient/views/queueActive', { title: 'Active Queue', queue: queueItems })
        });
        
    });

    app.get('/queue/history', function (req, res) {
        var queueItemId = require("url").parse(req.url, true).query.queueItemId;
        if (queueItemId == undefined) {
            nodeFlows.queueManager.getQueueHistory(function (items) {
                res.render('../node_modules/nodeFlowsExpressClient/views/queueHistory', { title: 'Work Queue History', queueHistory: items })
            });
        }
        else {

            nodeFlows.historyManager.getWorkerHistory(nodeFlows.SUBSYSTEM_QUEUEITEM, queueItemId, function (queueItemHistory) {
                nodeFlows.queueManager.getQueueItem(queueItemId, function (queueItem) {
                    res.render('../node_modules/nodeFlowsExpressClient/views/queueItemHistory', { title: 'Queue Item History', queueItemHistory: queueItemHistory, queueItem: queueItem });
                });
            });
        }
    });

    app.get('/queue/workers/', function (req, res) {
        res.render('../node_modules/nodeFlowsExpressClient/views/queueWorkers', { title: 'Workers', queueWorkers: nodeFlows.queueManager.getQueueWorkers() })
    });

    app.get('/queue/workers/view', function (req, res) {
        var workerId = require("url").parse(req.url, true).query.workerId;
        nodeFlows.historyManager.getWorkerHistory(nodeFlows.SUBSYSTEM_QUEUEWORKER, workerId, function (queueWorkerHistory) {
            res.render('../node_modules/nodeFlowsExpressClient/views/queueWorkerHistory', { title: 'Worker History', queueWorkerHistory: queueWorkerHistory, queueWorker: nodeFlows.queueManager.getQueueWorker(workerId) })
        });

    });

}