var nodeFlows = require('../nodeFlows');

exports.executeActivity = executeActivity;

function executeActivity(workflow, args, callback) {

    args.branches.some(function (branch) {
        //returning true breaks the loops so it doesnt continue
        //we stop the loop on an error condition or if the condition evaluates to true

        if (branch.Condition == null) {
            //Default condition so always return true
            workflow.addHistory({ task: "DefaultCondition", notes: "Setting Next Step to:" + branch.Step });
            callback({ success: true, nextStep: branch.Step });
            return true;
        }

        var conditionResults = workflow.evaluateCondition(branch.Condition);
        if (conditionResults.hasError) {
            workflow.status = "Blocked";
            callback({ success: false });
            return true;
        }
        else if (conditionResults.results) { //Condition succeeded
            //nodeFlows.log("condition Met.  Setting Next Step to:" + branch.Step);
            callback({ success: true, nextStep: branch.Step });
            return true;
        }
        else { //Condition failed
            // dont do anything.  It will continue the loop
        };

    });

}
