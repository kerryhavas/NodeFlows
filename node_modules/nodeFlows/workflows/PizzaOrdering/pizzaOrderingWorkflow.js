//Workflow to simulate the taking of a pizza order

var workflowDefinition = {
    Name: "PizzaOrder",
    workers: 2,
    Parameters: [
        { name: "deliveryType", displayName: "Delivery Type", parameterType:"Select", options: [{ name: "Delivery" }, {name:"Takeout"}] },
        { name: "name", displayName: "Customer Name", parameterType:"Input" },
        { name: "address", displayName: "Customer Address", parameterType:"Input" },
        { name: "city", displayName: "City", parameterType:"Input" },
        { name: "phone", displayName: "Phone", parameterType:"Input" },
        { name: "order", displayName: "Pizza Order", parameterType:"Input" }
    ],
    Steps: [
        { Name: "Step0",
            Type: "Init",
            args:
                { status: "Ordered", currentStepName: "OrderReceived", deliveryType: "Delivery" }
        },
        { Name: "OrderReceived",
            Type: "writeConsoleActivity",
            args:
                { text: "Workflow has been started" }
        },
        { Name: "EnterIntoComputer",
            Type: "writeConsoleActivity",
            args:
                { text: "Workflow has been started2" }
        },
        { Name: "SendToCook",
            Type: "createChildWorkflow",
            args:
                { workflowDefinition: "PizzaOrdering/cookWorkflow" }
        },
        { Name: "WaitForCooking",
            Type: "waitForActivity",
            args:
                { Condition: "workflow.status=='Cooked'" }
        },
        { Name: "CookingComplete",
            Type: "ifElseActivity",
            args:
                { text: "ifElse activity Step",
                    branches: [
                    { Condition: "this.parameters.deliveryType=='Delivery'", Step: "SendForDelivery" },
                    { Condition: "this.parameters.deliveryType=='Takeout'", Step: "WaitForCustomer" },
                    { Condition: null, Step: "WaitForCustomer"}  //Default
                    ]
                },
            nextStep: null
        },
        { Name: "SendForDelivery",
            Type: "createChildWorkflow",
            args:
                { workflowDefinition: "PizzaOrdering/deliveryWorkflow" },
            nextStep: "WaitForDelivery"
        },
        { Name: "WaitForDelivery",
            Type: "waitForActivity",
            args:
                { Condition: "workflow.status=='Delivered'" },
            nextStep: "Complete"
        },
        { Name: "WaitForCustomer",
            Type: "writeConsoleActivity",
            args:
                { text: "Waiting for Customer Pickup" },
            nextStep: "Complete"
        },
        { Name: "Complete",
            Type: "completeWorkflow",
            args:
                {},
            nextStep: null
        }
    ]
}

exports.workflowDefinition = workflowDefinition;
