var logging = require("./logManager.js");
var Events = require('events');
var EventEmitter = require('events').EventEmitter;

exports.addStat = addStat;
exports.getStats = getStats;

var eventEmitter = new Events.EventEmitter();

//Default listeners only allows 11.
process.setMaxListeners(50);

exports.statsEmitter = eventEmitter;

eventEmitter.on('StatEvent', function(statName) {
    addStat(statName, 1);
}); 

eventEmitter.on('StatEvent2', function(stat) {
    addStat2(stat.subsystem,stat.module,stat.statName, 1);
}); 

eventEmitter.on('WorkflowEvent', function(statName) {
    addStat(statName, 1);
}); 

var stats = {};
var statsRatings = {};

var timerStart = new Date().getTime();

var RollupInterval = setInterval(function () {
    //statManager.statsEmitter.emit('SecondTimer', {});
    addStat("StatRollup", 1);
    for (var statId in stats) {
        var stat = stats[statId]
        var timerCount = statsRatings[stat.name + "_TimerCount"];
        stats[statId].perHour = timerCount.count * 60;
        timerCount.count = 0;

    };
}, 60000);

function initializeStat(subsystem, module, statName){

        var stat = {subsystem:subsystem, module:module, name:statName, count:0, perHour:0};
        stats[statName] = stat;
        statsRatings[statName + "_TimerCount"] = {name:statName + "_TimerCount", count:0};

        return stat;

};

function addStat(statName, value) {

    var stat = stats[statName];
    var timerCount = statsRatings[statName + "_TimerCount"];

    if(stat == undefined) {
        stat = initializeStat("default", "default", statName);
        timerCount = statsRatings[statName + "_TimerCount"];
    };

    stat.count++;
    timerCount.count++;
    
    eventEmitter.emit('StatUpdate', stat);

}

function addStat2(subsystem, module, statName, value) {

    var stat = stats[statName];
    var timerCount = statsRatings[statName + "_TimerCount"];

    if(stat == undefined) {
        stat = initializeStat(subsystem, module, statName);
        timerCount = statsRatings[statName + "_TimerCount"];
    };

    stat.count++;
    timerCount.count++;
    
    eventEmitter.emit('StatUpdate', stat);

}


function getStats() {
    var returnArray = [];
    for(var stat in stats) {
       returnArray.push(stats[stat]);
    }
    return returnArray;
}